// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id            String  @id @default(uuid())
  name          String
  email         String  @unique
  password      String
  profile_image String?
}

model User {
  id               String     @id @default(uuid())
  email            String     @unique
  name             String
  password         String?
  bought_documents Document[]
  profile_image    String?
  cart             Cart?
  wishList         WishList?
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
}

model Cart {
  id        String     @id @default(uuid())
  documents Document[]
  user      User       @relation(fields: [userId], references: [id])
  userId    String     @unique
}

model WishList {
  id        String     @id @default(uuid())
  documents Document[]
  user      User       @relation(fields: [userId], references: [id])
  userId    String     @unique
}

model Document {
  id              String           @id @default(uuid())
  title           String
  document_path   String
  preview_path    String
  price           Float
  thumbnail_image String
  pages           Int
  rating          Float
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  users           User[]
  category        DocumentCategory @relation(fields: [categoryId], references: [id])
  categoryId      String
  bundle          DocumentBundle?  @relation(fields: [bundleId], references: [id])
  bundleId        String?
  downloadsCount  Int
  cart            Cart[]
  wishList        WishList[]
}

model DocumentBundle {
  id        String     @id @default(uuid())
  title     String
  documents Document[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model DocumentCategory {
  id        String     @id @default(uuid())
  title     String
  documents Document[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model ContactUs {
  id       String @id @default(uuid())
  fullname String
  email    String
  title    String
  message  String
}
